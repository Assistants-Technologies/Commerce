services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: Infra.Platform.Portainer
    restart: unless-stopped
    volumes:
      - portainer_data:/data
    environment:
      - LOG_LEVEL=INFO
    command: -H "tcp://portainer_agent:9001" --tlsskipverify
    depends_on:
      - portainer_agent
    networks:
      Infra.Platform.Nginx.Network:

  portainer_agent:
    image: portainer/agent:latest
    container_name: Infra.Platform.Portainer.Agent
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_CLUSTER_ADDR=tasks.portainer_agent
    deploy:
      mode: global
    privileged: true
    networks:
      Infra.Platform.Nginx.Network:
  
  idp:
    container_name: Infra.Modules.IdentityProvider
    build:
      context: ./Modules/IdentityProvider
      dockerfile: Dockerfile
    volumes:
      - ./Platform/Nginx/certs:/https:ro
    env_file:
      - .env
    depends_on:
      - idp_postgres
      - idp_redis
    networks:
      Infra.Platform.Nginx.Network:
      Infra.Modules.IdentityProvider.Network:

  idp_postgres:
    container_name: Infra.Modules.IdentityProvider.Postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: identity_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - idp_postgres_data:/var/lib/postgresql/data
    networks:
      Infra.Modules.IdentityProvider.Network:
  
  idp_redis:
    container_name: Infra.Modules.IdentityProvider.Redis
    image: redis:7-alpine
    restart: always
    volumes:
      - idp_redis_data:/data
    networks:
      Infra.Modules.IdentityProvider.Network:
  
  acc_panel:
    container_name: Infra.Modules.AccountPanel
    build:
      context: ./Modules/AccountPanel
      dockerfile: Dockerfile
    volumes:
      - ./Platform/Nginx/certs:/https:ro
    env_file:
      - .env
    depends_on:
      - idp
    networks:
      Infra.Platform.Nginx.Network:
      Infra.Modules.AccountPanel.Network:
  
  acc_panel_postgres:
    container_name: Infra.Modules.AccountPanel.Postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: account_panel_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - acc_panel_postgres_data:/var/lib/postgresql/data
    networks:
      Infra.Modules.AccountPanel.Network:

  nginx:
    container_name: Infra.Platform.Nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Platform/Nginx/conf.d:/etc/nginx/conf.d:ro
      - ./Platform/Nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - idp
      - acc_panel
      - commerce
    networks:
      Infra.Platform.Nginx.Network:
        aliases:
          - identity.assts.tech
          - account.assts.tech
          - commerce.assts.tech
          - portainer.assts.tech

  commerce:
    build:
      context: ./Modules/Commerce
    container_name: Infra.Modules.Commerce
    env_file:
      - .env
    volumes:
      - ./Modules/Commerce/medusa-config.ts:/app/medusa-config.ts
      - ./Modules/Commerce/src:/app/src
      - ./Platform/Nginx/certs:/app/certs:ro
    depends_on:
      - commerce_db
      - commerce_redis
    networks:
      Infra.Platform.Nginx.Network:
      Infra.Modules.Commerce.Network:
  
  commerce_db:
    container_name: Infra.Modules.Commerce.Postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: commerce_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - commerce_postgres_data:/var/lib/postgresql/data
    networks:
      Infra.Modules.Commerce.Network:
  
  commerce_redis:
    image: redis:6
    container_name: Infra.Modules.Commerce.Redis
    restart: unless-stopped
    volumes:
      - commerce_redis_data:/data
    networks:
      Infra.Modules.Commerce.Network:

volumes:
  portainer_data:
  idp_postgres_data:
  idp_redis_data:
  acc_panel_postgres_data:
  commerce_postgres_data:
  commerce_redis_data:

networks:
  Infra.Platform.Nginx.Network:
    driver: bridge
  Infra.Modules.IdentityProvider.Network:
    driver: bridge
  Infra.Modules.AccountPanel.Network:
    driver: bridge
  Infra.Modules.Commerce.Network:
    driver: bridge
